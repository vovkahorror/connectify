{"version":3,"file":"static/js/598.2e29e809.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","webpack://samurai-way/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__YeMQJ\",\"pageNumber\":\"Paginator_pageNumber__pzTIq\",\"selectedPageNumber\":\"Paginator_selectedPageNumber__h1lhJ\"};","import styles from './Paginator.module.css';\r\nimport React, {useState} from 'react';\r\nimport {v1} from 'uuid';\r\nimport classNames from 'classnames';\r\n\r\nexport const Paginator = ({\r\n                              currentPage,\r\n                              totalItemsCount,\r\n                              pageSize,\r\n                              onPageChanged,\r\n                              portionSize = 20,\r\n                          }: PaginatorPropsType) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portionSize));\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            <button disabled={portionNumber === 1} onClick={() => setPortionNumber(1)}>{'<---'}</button>\r\n            <button disabled={portionNumber === 1} onClick={() => setPortionNumber(portionNumber - 1)}>{'<--'}</button>\r\n\r\n            {pages\r\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map(page => {\r\n                    return (\r\n                        <span key={v1()}\r\n                              className={classNames(styles.pageNumber, {[styles.selectedPageNumber]: currentPage === page})}\r\n                              onClick={() => onPageChanged(page)}\r\n                        >{page}</span>\r\n                    );\r\n                })}\r\n\r\n            <button disabled={portionNumber === portionCount}\r\n                    onClick={() => setPortionNumber(portionNumber + 1)}>{'-->'}</button>\r\n            <button disabled={portionNumber === portionCount}\r\n                    onClick={() => setPortionNumber(portionCount)}>{'--->'}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype PaginatorPropsType = {\r\n    currentPage: number;\r\n    totalItemsCount: number;\r\n    pageSize: number;\r\n    onPageChanged: (pageNumber: number) => void;\r\n    portionSize?: number;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"User_userPhoto__TIYz7\"};","import {NavLink} from 'react-router-dom';\r\nimport userPhoto from '../../../assets/images/user.svg';\r\nimport styles from './User.module.css';\r\nimport React from 'react';\r\nimport {UserDataType} from '../../../redux/users-reducer';\r\n\r\nexport const User = ({user, followingInProgress, follow, unfollow}: UserPropsType) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`/profile/${user.id}`}><img\r\n                        src={user.photos.large || userPhoto}\r\n                        className={styles.userPhoto} alt={''}/></NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => unfollow(user.id)}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => follow(user.id)}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.city'}</div>\r\n                    <div>{'user.location.country'}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype UserPropsType = {\r\n    user: UserDataType;\r\n    followingInProgress: Array<number>;\r\n    follow: (userID: number) => void;\r\n    unfollow: (userID: number) => void;\r\n}","import React from 'react';\r\nimport {UserDataType} from '../../redux/users-reducer';\r\nimport {Paginator} from '../common/Paginator/Paginator';\r\nimport {User} from './User/User';\r\n\r\nexport const Users = ({\r\n                          currentPage,\r\n                          totalUsersCount,\r\n                          pageSize,\r\n                          onPageChanged,\r\n                          users,\r\n                          followingInProgress,\r\n                          follow,\r\n                          unfollow,\r\n                      }: UsersPropsType) => {\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                       onPageChanged={onPageChanged}/>\r\n\r\n            <div>\r\n                {users.map((user: UserDataType) => <User key={user.id} user={user}\r\n                                                         followingInProgress={followingInProgress}\r\n                                                         follow={follow}\r\n                                                         unfollow={unfollow}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport type UsersPropsType = {\r\n    users: UserDataType[];\r\n    pageSize: number;\r\n    totalUsersCount: number;\r\n    currentPage: number;\r\n    followingInProgress: Array<number>;\r\n    onPageChanged: (pageNumber: number) => void;\r\n    follow: (userID: number) => void;\r\n    unfollow: (userID: number) => void;\r\n}","import {AppStateType} from './redux-store';\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.app.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    UserDataType,\r\n    UsersType,\r\n} from '../../redux/users-reducer';\r\nimport React, {ComponentType} from 'react';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from '../../redux/users-selectors';\r\n\r\ntype MapStateType = {\r\n    users: UserDataType[];\r\n    pageSize: number;\r\n    totalUsersCount: number;\r\n    currentPage: number;\r\n    isFetching: boolean;\r\n    followingInProgress: Array<number>;\r\n}\r\n\r\ntype MapDispatchType = {\r\n    setCurrentPage: (currentPage: number) => void;\r\n    requestUsers: (pageNumber: number, pageSize: number) => void;\r\n    follow: (userID: number) => void;\r\n    unfollow: (userID: number) => void;\r\n}\r\n\r\ntype UsersContainerPropsType = MapStateType & MapDispatchType;\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType, UsersType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize, setCurrentPage, requestUsers} = this.props;\r\n        setCurrentPage(pageNumber);\r\n        requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    users={this.props.users}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    onPageChanged={this.onPageChanged}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    };\r\n};\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    requestUsers,\r\n    follow,\r\n    unfollow,\r\n}), withAuthRedirect)(UsersContainer);","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype MapStateForRedirectType = {\r\n    isAuth: boolean;\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateForRedirectType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    class RedirectComponent extends React.Component<MapStateForRedirectType> {\r\n        render() {\r\n            const {isAuth, ...restProps} = this.props;\r\n\r\n            if (!isAuth) {\r\n                return <Redirect to={'/login'}/>;\r\n            }\r\n\r\n            return <Component {...restProps as T}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}"],"names":["Paginator","currentPage","totalItemsCount","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","disabled","onClick","filter","page","map","classNames","v1","User","user","followingInProgress","follow","unfollow","to","id","src","photos","large","userPhoto","alt","followed","some","name","status","Users","totalUsersCount","users","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","app","isFetching","getFollowingInProgress","UsersContainer","pageNumber","props","setCurrentPage","requestUsers","this","Preloader","React","compose","connect","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","restProps"],"sourceRoot":""}