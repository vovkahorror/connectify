{"version":3,"file":"static/js/344.a879a614.chunk.js","mappings":"kOAkCaA,GAAiBC,EAAAA,EAAAA,GAAwB,CAClDC,KAAM,SADoBD,EAtByB,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACnE,OACI,kBAAMC,SAAUF,EAAhB,WACKG,EAAAA,EAAAA,IAAY,QAAS,QAAS,OAAQ,CAACC,EAAAA,GAAWC,EAAAA,KAClDF,EAAAA,EAAAA,IAAY,WAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,KAE7D,8BACI,SAACC,EAAA,EAAD,CAAOC,UAAWF,EAAAA,GAAOG,KAAM,aAAcC,KAAM,aADvD,iBAKCR,IAAS,gBAAKS,UAAWC,EAAAA,EAAAA,iBAAhB,SACLV,KAGL,0BACI,8C,4BCYhB,GAAeW,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAIa,CAACE,MAAAA,EAAAA,IAAzC,EAvBkC,SAAC,GAAqB,IAApBA,EAAmB,EAAnBA,MAKhC,OALmD,EAAZF,QAM5B,SAAC,KAAD,CAAUG,GAAI,cAIrB,4BACI,mCACA,SAACpB,EAAD,CAAgBK,SAXP,SAACgB,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,2MCXpDC,EAAmC,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASxB,EAAsB,EAAtBA,MAAQyB,EAAc,EAAdA,SAChEC,EAAWF,GAAWxB,EAE5B,OACI,iBAAKS,UAAWkB,EAAAA,EAAAA,YAAqB,KAAOD,EAAWC,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBAAMF,IACLC,IAAY,0BAAO1B,QAKnB4B,EAAW,SAACC,GACrB,IAAOP,EAA6BO,EAA7BP,MAAgBQ,GAAaD,EAAtBN,MAAd,OAAoCM,EAApC,IAEA,OACI,SAACR,GAAD,kBAAiBQ,GAAjB,cAAwB,uCAAcP,GAAWQ,QAI5C1B,EAAQ,SAACyB,GAClB,IAAOP,EAA6BO,EAA7BP,MAAgBQ,GAAaD,EAAtBN,MAAd,OAAoCM,EAApC,IAEA,OACI,SAACR,GAAD,kBAAiBQ,GAAjB,cAAwB,oCAAWP,GAAWQ,QAIzC5B,EAAc,SAAC6B,EAAqBxB,EAAcC,EAAcwB,EAAyB1B,GAAsC,IAAhBuB,EAAe,uDAAP,GAChI,OACI,0BACI,SAAC,KAAD,QAAOE,YAAaA,EAAaxB,KAAMA,EAAMC,KAAMA,EAAMyB,SAAUD,EAC5D1B,UAAWA,GAAeuB,Q,4ECvCtC,IAAM1B,EAAW,SAAC+B,GACrB,OAAOA,OAAQC,EAAY,qBAGlBC,EAAmB,SAACC,GAAD,OAAuB,SAACH,GACpD,OAAOA,EAAMI,OAASD,EAAf,wBAA4CA,EAA5C,iBAAkEF,K,mBCJ7E,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","webpack://samurai-way/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React, {FC} from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../../common/FormsControls/FormsControls';\r\nimport {required} from '../../../utils/validators/validators';\r\nimport controlsStyles from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nexport type FormDataType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n\r\nconst LoginForm: FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', 'text', [required], Input)}\r\n            {createField('Password', 'password', 'password', [required], Input)}\r\n\r\n            <label>\r\n                <Field component={Input} name={'rememberMe'} type={'checkbox'}/>\r\n                Remember me\r\n            </label>\r\n\r\n            {error && <div className={controlsStyles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            \r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const LoginFormRedux = reduxForm<FormDataType>({\r\n    form: 'login',\r\n})(LoginForm);","import React, {FC} from 'react';\r\nimport {FormDataType, LoginFormRedux} from './LoginForm/LoginForm';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean;\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void;\r\n}\r\n\r\ntype LoginPropsType = MapStateToPropsType & MapDispatchToPropsType;\r\n\r\nconst Login: FC<LoginPropsType> = ({login, isAuth}) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginFormRedux onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {Field, Validator, WrappedFieldProps} from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\nimport React, {FC, ReactNode} from 'react';\r\n\r\ntype FormControlType = WrappedFieldProps & {\r\n    children: ReactNode;\r\n}\r\n\r\nconst FormControl: FC<FormControlType> = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n    );\r\n};\r\n\r\nexport const Input = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n    );\r\n};\r\n\r\nexport const createField = (placeholder: string, name: string, type: string, validators: Validator[], component: ReactNode, props = {}) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} type={type} validate={validators}\r\n                   component={component} {...props}/>\r\n        </div>\r\n    );\r\n};","export const required = (value: string) => {\r\n    return value ? undefined : 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    return value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__7Kujw\",\"error\":\"FormsControls_error__VtPjP\",\"formSummaryError\":\"FormsControls_formSummaryError__u1JdX\"};"],"names":["LoginFormRedux","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","Field","component","name","type","className","controlsStyles","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","FormControl","input","meta","touched","children","hasError","styles","Textarea","props","restProps","placeholder","validators","validate","value","undefined","maxLengthCreator","maxLength","length"],"sourceRoot":""}