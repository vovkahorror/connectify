{"version":3,"file":"static/js/689.111e5768.chunk.js","mappings":"iJAAIA,E,UAEAC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAAkBH,EAASY,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAQC,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD6B,MAAO,6BACPC,KAAM,UACNC,QAAS,cACTC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM5B,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EoC,EAAG,iVAIP,IAAIC,EAA0B,aAAiBZ,GAChC,K,iIC9Bf,EAA0B,yBAA1B,EAA2D,uBAA3D,EAAyF,sBAAzF,EAA2H,2BAA3H,EAAoK,6BAApK,EAA4M,0BAA5M,EAAoP,6B,uCCOvOa,GAA+BC,EAAAA,EAAAA,OAAK,YAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACjEC,GAASC,EAAAA,EAAAA,KAATD,MACDE,EAA2B,UAAVF,EAAoBG,EAAeA,EACpDC,EAAwB,UAAVJ,EAAoBK,EAAAA,EAAYC,EAAAA,EAEpD,OACI,iBAAKC,UAAS,UAAKJ,EAAL,YAAuBD,GAArC,WACI,SAAC,KAAD,CAASM,GAAE,mBAAcZ,GAAzB,UACI,gBAAKW,UAAWJ,EAAkBM,IAAKZ,GAASO,EAAaM,IAAI,QAGrE,iBAAKH,UAAWJ,EAAhB,WACI,SAAC,KAAD,CAASI,UAAS,UAAKJ,EAAL,YAAwBD,GAAkBM,GAAE,mBAAcZ,GAA5E,UACI,0BAAOE,OAEX,iBAAMS,UAAS,UAAKJ,EAAL,YAA2BD,GAA1C,SAA6DH,aCtB7E,EAA2B,2BAA3B,EAAmE,6BAAnE,EAAwG,wBAAxG,EAAuI,uBCO1HY,EAAkC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEvCV,EAA2B,WADjBD,EAAAA,EAAAA,KAATD,MACoCG,EAAeA,EACpDU,GAAWC,EAAAA,EAAAA,KAA6C,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,YAC5EI,GAAoBC,EAAAA,EAAAA,QAAuB,MACjD,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAoBA,OARAC,EAAAA,EAAAA,YAAU,WACFF,GACAG,YAAW,WAAO,IAAD,EACb,UAAAN,EAAkBO,eAAlB,SAA2BC,eAAe,CAACC,SAAU,aACtD,OAER,CAACN,EAAcP,KAGd,iBAAKN,UAAWJ,EAAiBwB,SAnBf,SAACC,GACnB,IAAMC,EAAUD,EAAEE,cACZC,EAAeF,EAAQG,aAAeH,EAAQI,UAAYJ,EAAQK,aAEpEb,EADAU,EAAe,KAgBnB,UACKlB,EAASsB,KAAI,SAAAC,GAAC,OACX,SAAC1C,GAAD,UAAwB0C,GAAVA,EAAE7C,QAElBsB,EAASjD,SAAU,iBAAM2C,UAAS,UAAKJ,EAAL,YAA0BD,GAAzC,SAA4DU,EAAWY,WAC5F,gBAAKlC,IAAK2B,Q,UCtCtB,EAAiC,uCAAjC,EAAgF,8BAAhF,EAAqH,6BAArH,EAAiK,qCAAjK,EAA8M,8BAA9M,EAAqP,+BAArP,EAAiS,mCAAjS,EAA+U,iC,UCSlUoB,EAAqB,WAC9B,IAAOC,GAAKC,EAAAA,EAAAA,IAAe,WAApBD,EAEDpC,EAA2B,WADjBD,EAAAA,EAAAA,KAATD,MACoCG,EAAeA,EAC1D,GAA8BgB,EAAAA,EAAAA,UAAS,IAAvC,eAAOpB,EAAP,KAAgByC,EAAhB,KACMC,GAAS3B,EAAAA,EAAAA,KAAsC,SAAAC,GAAK,OAAIA,EAAMC,KAAKyB,UACnEC,GAAWC,EAAAA,EAAAA,MAMXC,EAAqB,YAClB7C,EAAQ8C,QAAU9C,EAAQnC,OAAS,MAIxC8E,GAASI,EAAAA,EAAAA,IAAY/C,IACrByC,EAAW,MASf,OACI,iBAAKjC,UAAS,UAAKJ,EAAL,YAA8BD,GAA5C,WACI,iBAAKK,UAAWJ,EAAhB,WACI,kBAAOI,UAAS,UAAKJ,EAAL,YAAqBD,GAAkB6C,MAAOhD,EAASiD,UAT1D,SAACpB,GACR,UAAVA,EAAE9D,KACF8E,KAQWK,YAAaX,EAAE,oBACfY,SAxBS,SAACtB,GACzBY,EAAWZ,EAAEE,cAAciB,MAAMI,MAAM,EAAG,OAuBIC,UAAWC,SAASC,gBAAgBC,YAAc,OACxF,kBACIhD,UAAS,UAAKJ,EAAL,YAAsBD,GADnC,UACsDoC,EAAE,WADxD,IACqE,IAAMvC,EAAQnC,OADnF,IAC4F0E,EAAE,yBAElG,mBAAQ/B,UAAWJ,EAAmBqD,SAAqB,UAAXf,IAAuB1C,EAAQnC,OACvE6F,QAASb,EADjB,UAEI,SAAC,IAAD,CAAUrC,UAAWJ,UC/CrC,EAAuB,mBAAvB,EAAkD,oBAAlD,EAA6E,mB,8BCwC7E,GAAeuD,EAAAA,EAAAA,IAAuBC,EAAAA,EAAkBC,EAAAA,EAAxD,EA1BiB,WACb,IAAOtB,GAAKC,EAAAA,EAAAA,IAAe,WAApBD,EAEDpC,EAA2B,WADjBD,EAAAA,EAAAA,KAATD,MACoCG,EAAeA,EACpDsC,GAAS3B,EAAAA,EAAAA,KAAsC,SAAAC,GAAK,OAAIA,EAAMC,KAAKyB,UACnEC,GAAWC,EAAAA,EAAAA,MACb/B,GAAaM,EAAAA,EAAAA,QAAO,IAWxB,OATAI,EAAAA,EAAAA,YAAU,WAIN,OAHAoB,GAASmB,EAAAA,EAAAA,OACJC,MAAK,kBAAMlD,EAAWY,QAAUc,EAAE,uBAEhC,WACHI,GAASqB,EAAAA,EAAAA,UAEd,CAACrB,EAAUJ,KAGV,kBAAM/B,UAAS,UAAKJ,EAAL,YAAoBD,GAAnC,UACgB,UAAXuC,IAAsB,yBAAMH,EAAE,YAC/B,SAAC3B,EAAD,CAAUC,WAAYA,KACtB,SAACyB,EAAD,W,yKC3BN2B,EAA6B,SAACjD,GAChC,MAAO,CACHkD,OAAQlD,EAAMmD,KAAKD,SAIpB,SAASN,EAAoBQ,GAA8B,IACxDC,EADuD,0IAEzD,WACI,MAA+BjG,KAAKe,MAA7B+E,EAAP,EAAOA,OAAWI,GAAlB,YAEA,OAAKJ,GAIE,SAACE,GAAD,UAAeE,KAHX,SAAC,KAAD,CAAU7D,GAAI,eAN4B,GAC7B8D,EAAAA,WAYhC,OAAOC,EAAAA,EAAAA,IAAQP,EAARO,CAAoCH,K,0GCxBlCR,EAAyB,SAACO,GACnC,OAAO,SAACjF,GACJ,IAAMwD,GAAWC,EAAAA,EAAAA,MAMjB,OAJArB,EAAAA,EAAAA,YAAU,WACNoB,GAAS8B,EAAAA,EAAAA,SACV,CAAC9B,KAEG,SAACyB,GAAD,UAAejF,O,qBCXf,SAASd,EAAyBP,EAAQQ,GACvD,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IACIC,EAAKJ,EADLD,ECHS,SAAuCI,EAAQQ,GAC5D,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EDTM,CAA6BI,EAAQQ,GAGlD,GAAId,OAAOmB,sBAAuB,CAChC,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAEpD,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IACvCI,EAAMa,EAAiBjB,GACnBW,EAASG,QAAQV,IAAQ,GACxBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KACxDL,EAAOK,GAAOD,EAAOC,IAIzB,OAAOL,E","sources":["assets/icons/send.svg","webpack://connectify/./src/components/Chat/Messages/Message/Message.module.scss?2dab","components/Chat/Messages/Message/Message.tsx","webpack://connectify/./src/components/Chat/Messages/Messages.module.scss?4dda","components/Chat/Messages/Messages.tsx","webpack://connectify/./src/components/Chat/AddMessageForm/AddMessageForm.module.scss?afa3","components/Chat/AddMessageForm/AddMessageForm.tsx","webpack://connectify/./src/components/Chat/Chat.module.scss?3294","components/Chat/Chat.tsx","hoc/withAuthRedirect.tsx","hoc/withNewMessagesRequest.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#ffffff\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L284 427.7l-68.5 74.1c-8.9 9.7-22.9 12.9-35.2 8.1S160 493.2 160 480V396.4c0-4 1.5-7.8 4.2-10.7L331.8 202.8c5.8-6.3 5.6-16-.4-22s-15.7-6.4-22-.7L106 360.8 17.7 316.6C7.1 311.3 .3 300.7 0 288.9s5.9-22.8 16.1-28.7l448-256c10.7-6.1 23.9-5.5 34 1.4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.c0e22ddf3e35343a66d005cd0aab4085.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__khRHI\",\"light\":\"Message_light__lnSNC\",\"dark\":\"Message_dark__K7duP\",\"userPhoto\":\"Message_userPhoto__AC4YW\",\"messageInfo\":\"Message_messageInfo__TpODg\",\"userName\":\"Message_userName__Y61qO\",\"messageText\":\"Message_messageText__SxEow\"};","import React, {FC, memo} from 'react';\r\nimport {ChatMessageType} from '../../../../api/chat-api';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Message.module.scss';\r\nimport {useTheme} from '../../../../theme/useTheme';\r\nimport userLight from '../../../../assets/images/userLight.svg';\r\nimport userDark from '../../../../assets/images/userDark.svg';\r\n\r\nexport const Message: FC<ChatMessageType> = memo(({userId, photo, userName, message}) => {\r\n    const {theme} = useTheme();\r\n    const themeClassName = theme === 'light' ? styles.light : styles.dark;\r\n    const userNoPhoto = theme === 'light' ? userLight : userDark;\r\n\r\n    return (\r\n        <div className={`${styles.message} ${themeClassName}`}>\r\n            <NavLink to={`/profile/${userId}`}>\r\n                <img className={styles.userPhoto} src={photo || userNoPhoto} alt=\"\"/>\r\n            </NavLink>\r\n\r\n            <div className={styles.messageInfo}>\r\n                <NavLink className={`${styles.userName} ${themeClassName}`} to={`/profile/${userId}`}>\r\n                    <span>{userName}</span>\r\n                </NavLink>\r\n                <span className={`${styles.messageText} ${themeClassName}`}>{message}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n});","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__I6e3Z\",\"noMessages\":\"Messages_noMessages__stUGj\",\"light\":\"Messages_light__qu6CS\",\"dark\":\"Messages_dark__tQVWM\"};","import React, {FC, MutableRefObject, UIEvent, useEffect, useRef, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {ChatMessageType} from '../../../api/chat-api';\r\nimport {Message} from './Message/Message';\r\nimport styles from './Messages.module.scss';\r\nimport {useTheme} from '../../../theme/useTheme';\r\n\r\nexport const Messages: FC<MessagesPropsType> = ({noMessages}) => {\r\n    const {theme} = useTheme();\r\n    const themeClassName = theme === 'light' ? styles.light : styles.dark;\r\n    const messages = useSelector<AppStateType, ChatMessageType[]>(state => state.chat.messages);\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n\r\n    const scrollHandler = (e: UIEvent<HTMLDivElement>) => {\r\n        const element = e.currentTarget;\r\n        const bottomOffset = element.scrollHeight - element.scrollTop - element.clientHeight;\r\n        if (bottomOffset < 50) {\r\n            setIsAutoScroll(true);\r\n        } else {\r\n            setIsAutoScroll(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            setTimeout(() => {\r\n                messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'});\r\n            }, 100);\r\n        }\r\n    }, [isAutoScroll, messages]);\r\n\r\n    return (\r\n        <div className={styles.messages} onScroll={scrollHandler}>\r\n            {messages.map(m =>\r\n                <Message key={m.id} {...m}/>,\r\n            )}\r\n            {!messages.length && <span className={`${styles.noMessages} ${themeClassName}`}>{noMessages.current}</span>}\r\n            <div ref={messagesAnchorRef}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype MessagesPropsType = {\r\n    noMessages: MutableRefObject<string>;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"addMessageForm\":\"AddMessageForm_addMessageForm__+xRNN\",\"light\":\"AddMessageForm_light__Y7xaC\",\"dark\":\"AddMessageForm_dark__UQ0oT\",\"inputWrapper\":\"AddMessageForm_inputWrapper__zf3z1\",\"input\":\"AddMessageForm_input__ldwW6\",\"notice\":\"AddMessageForm_notice__kzCYF\",\"sendButton\":\"AddMessageForm_sendButton__1UTe-\",\"sendIcon\":\"AddMessageForm_sendIcon__MjooN\"};","import React, {ChangeEvent, FC, KeyboardEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {StatusType} from '../../../api/chat-api';\r\nimport {sendMessage} from '../../../redux/chat-reducer';\r\nimport {ReactComponent as SendIcon} from '../../../assets/icons/send.svg';\r\nimport styles from './AddMessageForm.module.scss';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useTheme} from '../../../theme/useTheme';\r\n\r\nexport const AddMessageForm: FC = () => {\r\n    const {t} = useTranslation('dialogs');\r\n    const {theme} = useTheme();\r\n    const themeClassName = theme === 'light' ? styles.light : styles.dark;\r\n    const [message, setMessage] = useState('');\r\n    const status = useSelector<AppStateType, StatusType>(state => state.chat.status);\r\n    const dispatch = useDispatch();\r\n\r\n    const writeMessageHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMessage(e.currentTarget.value.slice(0, 100));\r\n    };\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message.trim() || message.length > 100) {\r\n            return;\r\n        }\r\n\r\n        dispatch(sendMessage(message));\r\n        setMessage('');\r\n    };\r\n\r\n    const onKeyDownHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            sendMessageHandler();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`${styles.addMessageForm} ${themeClassName}`}>\r\n            <div className={styles.inputWrapper}>\r\n                <input className={`${styles.input} ${themeClassName}`} value={message} onKeyDown={onKeyDownHandler}\r\n                       placeholder={t('enterYourMessage')}\r\n                       onChange={writeMessageHandler} autoFocus={document.documentElement.clientWidth > 768}/>\r\n                <span\r\n                    className={`${styles.notice} ${themeClassName}`}>{t('youHave')} {100 - message.length} {t('charactersLeft')}</span>\r\n            </div>\r\n            <button className={styles.sendButton} disabled={status !== 'ready' || !message.length}\r\n                    onClick={sendMessageHandler}>\r\n                <SendIcon className={styles.sendIcon}/>\r\n            </button>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__-aK9o\",\"light\":\"Chat_light__DR7uS\",\"dark\":\"Chat_dark__fjM0U\"};","import React, {ComponentType, FC, useEffect, useRef} from 'react';\r\nimport {StatusType} from '../../api/chat-api';\r\nimport {startMessagesListening, stopMessagesListening} from '../../redux/chat-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Messages} from './Messages/Messages';\r\nimport {AddMessageForm} from './AddMessageForm/AddMessageForm';\r\nimport styles from './Chat.module.scss';\r\nimport {AnyAction, compose} from 'redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {withNewMessagesRequest} from '../../hoc/withNewMessagesRequest';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {useTheme} from '../../theme/useTheme';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst Chat: FC = () => {\r\n    const {t} = useTranslation('dialogs');\r\n    const {theme} = useTheme();\r\n    const themeClassName = theme === 'light' ? styles.light : styles.dark;\r\n    const status = useSelector<AppStateType, StatusType>(state => state.chat.status);\r\n    const dispatch = useDispatch<ThunkDispatch<AppStateType, any, AnyAction>>();\r\n    let noMessages = useRef('');\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n            .then(() => noMessages.current = t('noMessagesInChat'));\r\n\r\n        return () => {\r\n            dispatch(stopMessagesListening());\r\n        };\r\n    }, [dispatch, t]);\r\n\r\n    return (\r\n        <main className={`${styles.chat} ${themeClassName}`}>\r\n            {status === 'error' && <div>{t('error')}</div>}\r\n            <Messages noMessages={noMessages}/>\r\n            <AddMessageForm/>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default compose<ComponentType>(withAuthRedirect, withNewMessagesRequest)(Chat);","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype MapStateForRedirectType = {\r\n    isAuth: boolean;\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateForRedirectType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    class RedirectComponent extends React.Component<MapStateForRedirectType> {\r\n        render() {\r\n            const {isAuth, ...restProps} = this.props;\r\n\r\n            if (!isAuth) {\r\n                return <Redirect to={'/login'}/>;\r\n            }\r\n\r\n            return <Component {...restProps as T}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {ComponentType, useEffect} from 'react';\r\nimport {getNewMessagesCount} from '../redux/dialogs-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport const withNewMessagesRequest = (Component: ComponentType) => {\r\n    return (props: any) => {\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(getNewMessagesCount());\r\n        }, [dispatch]);\r\n\r\n        return <Component {...props} />;\r\n    };\r\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSend","_ref","svgRef","title","titleId","props","xmlns","fill","viewBox","ref","id","d","ForwardRef","Message","memo","userId","photo","userName","message","theme","useTheme","themeClassName","styles","userNoPhoto","userLight","userDark","className","to","src","alt","Messages","noMessages","messages","useSelector","state","chat","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","useEffect","setTimeout","current","scrollIntoView","behavior","onScroll","e","element","currentTarget","bottomOffset","scrollHeight","scrollTop","clientHeight","map","m","AddMessageForm","t","useTranslation","setMessage","status","dispatch","useDispatch","sendMessageHandler","trim","sendMessage","value","onKeyDown","placeholder","onChange","slice","autoFocus","document","documentElement","clientWidth","disabled","onClick","compose","withAuthRedirect","withNewMessagesRequest","startMessagesListening","then","stopMessagesListening","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","restProps","React","connect","getNewMessagesCount"],"sourceRoot":""}