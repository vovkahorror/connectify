{"version":3,"file":"static/js/853.d6a2ced1.chunk.js","mappings":"0JACA,MAAuB,mBAAvB,EAAkD,oBAAlD,EAA6E,mB,8BCA7E,EAA2B,2BAA3B,EAA8D,wBAA9D,EAA6F,uBAA7F,EAA4H,wBAA5H,EAAqK,iCAArK,EAAgN,0BAAhN,EAAkP,wBAAlP,EAAwR,8BAAxR,EAAoU,8BAApU,EAA2W,yBAA3W,EAA2Y,uBAA3Y,EAAya,uB,6BCM5ZA,EAAkC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC7C,GAAkBC,EAAAA,EAAAA,IAAe,QAA1BC,EAAP,EAAOA,EAAGC,EAAV,EAAUA,KAEJC,EAA2B,WADjBC,EAAAA,EAAAA,KAATC,MACoCC,EAAeA,EAEpDC,GAAOC,EAAAA,EAAAA,IAAaT,EAASU,YAAaP,EAAKQ,UAC/CC,GAAOC,EAAAA,EAAAA,IAAab,EAASU,YAAaP,EAAKQ,UAE/CG,EAAuBd,EAASe,QAAQC,MAAM,EAAGhB,EAASe,QAAQE,QAAQ,MAEhF,OACI,iBAAKC,UAAS,UAAKX,EAAL,YAAwBH,GAAtC,WACI,gBAAKc,UAAWX,EAAcY,MAAO,CAACC,gBAAgB,OAAD,OAASpB,EAASqB,MAAlB,SACrD,iBAAKH,UAAWX,EAAhB,WACI,iBAAKW,UAAWX,EAAhB,WACI,eAAIW,UAAS,UAAKX,EAAL,YAAqBH,GAAlC,SAAqDJ,EAASsB,SAC9D,eAAIJ,UAAS,UAAKX,EAAL,YAA2BH,GAAxC,SAA2DJ,EAASuB,eACpE,cAAGL,UAAS,UAAKX,EAAL,YAA2BH,GAAvC,SAA0DU,QAE9D,iBAAKI,UAAWX,EAAhB,WACI,kBACIW,UAAS,UAAKX,EAAL,YAAoBH,GADjC,UACoDF,EAAE,eADtD,IACuEM,EADvE,IAC8EN,EAAE,MADhF,IACwFU,EADxF,IAC+FV,EAAE,MADjG,IACyG,KACrG,cAAGgB,UAAS,UAAKX,EAAL,YAAoBH,GAAkBoB,KAAMxB,EAASyB,OAAOC,IAAKC,OAAQ,SAClFC,IAAI,aADP,SAEC5B,EAASyB,OAAOI,WAErB,cAAGX,UAAWX,EAAaiB,KAAMxB,EAAS0B,IAAKC,OAAQ,SACpDC,IAAI,aADP,SACqB1B,EAAE,wB,8BCK3C,GAAe4B,E,QAAAA,IA3BF,WACT,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAmC,SAAAC,GAAK,OAAIA,EAAMC,IAAIH,cACnEI,GAAOH,EAAAA,EAAAA,KAA0C,SAAAC,GAAK,OAAIA,EAAME,QAC/DlC,GAAQF,EAAAA,EAAAA,MAARE,KAEDC,EAA2B,WADjBC,EAAAA,EAAAA,KAATC,MACoCC,EAAeA,EAW1D,OAJA+B,EAAAA,EAAAA,YAAU,YALU,WAChB,IAAMC,EAAyB,UAAlBpC,EAAKQ,SAAuB,KAAO,KAChDoB,GAASS,EAAAA,EAAAA,GAAQD,IAIjBE,KACD,KAGC,gCACKR,GAAa,SAACS,EAAA,EAAD,IAAe,MAC7B,gBAAKxB,UAAS,UAAKX,EAAL,YAAoBH,GAAlC,SACKiC,EAAKM,KAAI,SAAAC,GAAI,OAAI,SAAC7C,EAAD,CAAqBC,SAAU4C,IAAhBC,EAAAA,EAAAA,kB,0GC5BpCf,EAAyB,SAACgB,GACnC,OAAO,SAACC,GACJ,IAAMhB,GAAWC,EAAAA,EAAAA,MACXgB,GAASd,EAAAA,EAAAA,KAAmC,SAAAC,GAAK,OAAIA,EAAMc,KAAKD,UAQtE,OANAV,EAAAA,EAAAA,YAAU,WACFU,GACAjB,GAASmB,EAAAA,EAAAA,SAEd,CAACnB,EAAUiB,KAEP,SAACF,GAAD,UAAeC,O,sGChBvB,IAAMI,EAAwB,SAAC3C,GAClC,IAAM4C,EAAa,IAAIC,KAAK7C,GACtB8C,EAAiBC,KAAKC,IAAIJ,EAAWK,qBAE3C,OADAL,EAAWM,WAAWN,EAAWO,aAAeL,GACzCF,GAGE3C,EAAe,SAACD,GAA2C,IAAtBoD,EAAqB,uDAAZ,QACvD,OAAO,IAAIP,KAAK7C,GAAMqD,mBAAmBD,EAAQ,CAC7CE,IAAK,UACLC,MAAO,OACPC,KAAM,aAIDnD,EAAe,SAACL,GAA2C,IAAtBoD,EAAqB,uDAAZ,QACvD,OAAO,IAAIP,KAAK7C,GAAMyD,mBAAmBL,EAAQ,CAC7CM,KAAM,UACNC,OAAQ,UACRC,QAAQ","sources":["webpack://connectify/./src/components/News/News.module.scss?cf64","webpack://connectify/./src/components/News/NewsItem/NewsItem.module.scss?8ccf","components/News/NewsItem/NewsItem.tsx","components/News/News.tsx","hoc/withNewMessagesRequest.tsx","utils/date-helpers.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"news\":\"News_news__+lUIJ\",\"light\":\"News_light__rFHBv\",\"dark\":\"News_dark__Fe+nz\"};","// extracted by mini-css-extract-plugin\nexport default {\"newsItem\":\"NewsItem_newsItem__NyptW\",\"light\":\"NewsItem_light__AkM5N\",\"dark\":\"NewsItem_dark__bu9tY\",\"image\":\"NewsItem_image__oKodx\",\"contextWrapper\":\"NewsItem_contextWrapper__sogZU\",\"content\":\"NewsItem_content__3eIza\",\"title\":\"NewsItem_title__ez+72\",\"description\":\"NewsItem_description__9E3gi\",\"contentText\":\"NewsItem_contentText__yU+bI\",\"footer\":\"NewsItem_footer__HDUQ+\",\"date\":\"NewsItem_date__HCTIY\",\"link\":\"NewsItem_link__Y9bRa\"};","import {NewsItemType} from '../../../redux/news-reducer';\r\nimport {FC} from 'react';\r\nimport {useTheme} from '../../../theme/useTheme';\r\nimport styles from './NewsItem.module.scss';\r\nimport {toFormatDate, toFormatTime} from '../../../utils/date-helpers';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport const NewsItem: FC<NewsItemPropsType> = ({newsItem}) => {\r\n    const {t, i18n} = useTranslation('news');\r\n    const {theme} = useTheme();\r\n    const themeClassName = theme === 'light' ? styles.light : styles.dark;\r\n\r\n    const date = toFormatDate(newsItem.publishedAt, i18n.language);\r\n    const time = toFormatTime(newsItem.publishedAt, i18n.language);\r\n\r\n    const formattedContentText = newsItem.content.slice(0, newsItem.content.indexOf('['));\r\n\r\n    return (\r\n        <div className={`${styles.newsItem} ${themeClassName}`}>\r\n            <div className={styles.image} style={{backgroundImage: `url(${newsItem.image})`}}></div>\r\n            <div className={styles.contextWrapper}>\r\n                <div className={styles.content}>\r\n                    <h2 className={`${styles.title} ${themeClassName}`}>{newsItem.title}</h2>\r\n                    <h3 className={`${styles.description} ${themeClassName}`}>{newsItem.description}</h3>\r\n                    <p className={`${styles.contentText} ${themeClassName}`}>{formattedContentText}</p>\r\n                </div>\r\n                <div className={styles.footer}>\r\n                    <span\r\n                        className={`${styles.date} ${themeClassName}`}>{t('publishedOn')} {date} {t('at')} {time} {t('in')} {' '}\r\n                        <a className={`${styles.date} ${themeClassName}`} href={newsItem.source.url} target={'_blank'}\r\n                           rel=\"noreferrer\">\r\n                        {newsItem.source.name}\r\n                    </a></span>\r\n                    <a className={styles.link} href={newsItem.url} target={'_blank'}\r\n                       rel=\"noreferrer\">{t('readMore')}</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype NewsItemPropsType = {\r\n    newsItem: NewsItemType\r\n}","import styles from './News.module.scss';\r\nimport {useTheme} from '../../theme/useTheme';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getNews, NewsItemType} from '../../redux/news-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {NewsItem} from './NewsItem/NewsItem';\r\nimport {v1} from 'uuid';\r\nimport {useTranslation} from 'react-i18next';\r\nimport React, {useEffect} from 'react';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {withNewMessagesRequest} from '../../hoc/withNewMessagesRequest';\r\n\r\nconst News = () => {\r\n    const dispatch = useDispatch();\r\n    const isFetching = useSelector<AppStateType, boolean>(state => state.app.isFetching);\r\n    const news = useSelector<AppStateType, NewsItemType[]>(state => state.news);\r\n    const {i18n} = useTranslation();\r\n    const {theme} = useTheme();\r\n    const themeClassName = theme === 'light' ? styles.light : styles.dark;\r\n\r\n    const requestNews = () => {\r\n        const lang = i18n.language === 'en-GB' ? 'en' : 'uk';\r\n        dispatch(getNews(lang));\r\n    };\r\n\r\n    useEffect(() => {\r\n        requestNews();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <div className={`${styles.news} ${themeClassName}`}>\r\n                {news.map(item => <NewsItem key={v1()} newsItem={item}/>)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withNewMessagesRequest(News);","import {ComponentType, useEffect} from 'react';\r\nimport {getNewMessagesCount} from '../redux/dialogs-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\nexport const withNewMessagesRequest = (Component: ComponentType) => {\r\n    return (props: any) => {\r\n        const dispatch = useDispatch();\r\n        const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n\r\n        useEffect(() => {\r\n            if (isAuth) {\r\n                dispatch(getNewMessagesCount());\r\n            }\r\n        }, [dispatch, isAuth]);\r\n\r\n        return <Component {...props} />;\r\n    };\r\n};","export const setTimezoneOffsetDate = (date: string | Date) => {\r\n    const serverDate = new Date(date);\r\n    const timeZoneOffset = Math.abs(serverDate.getTimezoneOffset());\r\n    serverDate.setMinutes(serverDate.getMinutes() + timeZoneOffset);\r\n    return serverDate;\r\n};\r\n\r\nexport const toFormatDate = (date: string | Date, locale = 'en-GB') => {\r\n    return new Date(date).toLocaleDateString(locale, {\r\n        day: 'numeric',\r\n        month: 'long',\r\n        year: 'numeric',\r\n    });\r\n};\r\n\r\nexport const toFormatTime = (date: string | Date, locale = 'en-GB') => {\r\n    return new Date(date).toLocaleTimeString(locale, {\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        hour12: false,\r\n    });\r\n};"],"names":["NewsItem","newsItem","useTranslation","t","i18n","themeClassName","useTheme","theme","styles","date","toFormatDate","publishedAt","language","time","toFormatTime","formattedContentText","content","slice","indexOf","className","style","backgroundImage","image","title","description","href","source","url","target","rel","name","withNewMessagesRequest","dispatch","useDispatch","isFetching","useSelector","state","app","news","useEffect","lang","getNews","requestNews","Preloader","map","item","v1","Component","props","isAuth","auth","getNewMessagesCount","setTimezoneOffsetDate","serverDate","Date","timeZoneOffset","Math","abs","getTimezoneOffset","setMinutes","getMinutes","locale","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","hour12"],"sourceRoot":""}