{"version":3,"file":"static/js/630.74652f34.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/AddNewPostForm/AddNewPostForm.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Posts/PostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/common/FormsControls/FormsControls.tsx","hoc/withAuthRedirect.tsx","utils/validators/validators.ts","webpack://samurai-way/./src/components/common/FormsControls/FormsControls.module.css?eb50","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__4NJUd\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string;\r\n    updateStatus: (status: string) => void;\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => setEditMode(true);\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => setStatus(e.currentTarget.value);\r\n\r\n    return (\r\n        <>\r\n            {!editMode\r\n                ? <div><span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span></div>\r\n                : <div><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                              value={status}/></div>}\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport {ProfileAPIType} from '../../../redux/profile-reducer';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileAPIType | null;\r\n    status: string;\r\n    updateStatus: (status: string) => void;\r\n}\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatus}: ProfileInfoPropsType) => {\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                {profile.photos.large && <div><img src={profile.photos.large} alt=\"\"/></div>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                {/*{props.profile.fullName && <div>{props.profile.fullName}</div>}*/}\r\n                {/*{props.profile.aboutMe && <div>{props.profile.aboutMe}</div>}*/}\r\n                {/*{props.profile.contacts.facebook && <div>{props.profile.contacts.facebook}</div>}*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ulIEf\"};","import React from \"react\";\r\nimport styles from './Post.module.css'\r\n\r\nexport type PostType = {\r\n  message: string;\r\n  likes: number;\r\n}\r\n\r\nexport const Post = (props: PostType) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <img src=\"https://www.terminal-a.com.ua/wp-content/uploads/2017/05/Koala.jpg\" alt=\"\"/>\r\n      <span>{props.message}</span> <span>Likes: {props.likes}</span>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"Posts_postsBlock__9oy-3\",\"posts\":\"Posts_posts__ErrKd\"};","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React, {FC} from 'react';\r\nimport {maxLengthCreator, required} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/FormsControls/FormsControls';\r\n\r\nexport type FormDataType = {\r\n    newPostText: string;\r\n}\r\n\r\nconst maxLength70 = maxLengthCreator(70);\r\n\r\nconst AddNewPostForm: FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} validate={[required, maxLength70]}\r\n                       placeholder={'Post message'}/>\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddNewPostFormRedux = reduxForm<FormDataType>({form: 'profileAddPostForm'})(AddNewPostForm);","import React, {memo} from 'react';\r\nimport {Post} from './Post/Post';\r\nimport styles from './Posts.module.css';\r\nimport {PostsDataType} from '../../../redux/profile-reducer';\r\nimport {AddNewPostFormRedux, FormDataType} from './AddNewPostForm/AddNewPostForm';\r\n\r\ntype PostsPropsType = {\r\n    addPost: (newPostText: string) => void;\r\n    postsData: Array<PostsDataType>;\r\n}\r\n\r\nexport const Posts = memo((props: PostsPropsType) => {\r\n    const postsElements = props.postsData.map(post => {\r\n        return <Post key={post.id} message={post.message} likes={post.likes}/>;\r\n    });\r\n\r\n    const onAddPost = (values: FormDataType) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import React from \"react\";\r\nimport {addPostAC, PostsDataType} from \"../../../redux/profile-reducer\";\r\nimport {Posts} from \"./Posts\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ntype mapStateToPropsType = {\r\n    postsData: PostsDataType[];\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText));\r\n        },\r\n    };\r\n};\r\n\r\nexport const PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport {ProfileAPIType} from '../../redux/profile-reducer';\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileAPIType | null;\r\n    status: string;\r\n    updateStatus: (status: string) => void;\r\n}\r\n\r\nexport const Profile = ({profile, status, updateStatus}: ProfilePropsType) => {\r\n    return (\r\n        <main>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n            <PostsContainer/>\r\n        </main>\r\n    );\r\n};","import React, {ComponentType} from 'react';\r\nimport {getStatus, getUserProfile, ProfileAPIType, ProfilePageType, updateStatus} from '../../redux/profile-reducer';\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype PathParamsType = {\r\n    userID: string;\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: ProfileAPIType | null;\r\n    status: string;\r\n    authorizedUserID: number | null;\r\n    isAuth: boolean;\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userID: number) => void;\r\n    getStatus: (userID: number) => void;\r\n    updateStatus: (status: string) => void;\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType;\r\ntype ProfileContainerPropsType = RouteComponentProps<PathParamsType> & OwnPropsType;\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType, ProfilePageType> {\r\n    componentDidMount() {\r\n        let userID = +this.props.match.params.userID;\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserID as number;\r\n        }\r\n        this.props.getUserProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n}), withRouter, withAuthRedirect)(ProfileContainer);","import {Field, Validator, WrappedFieldProps} from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\nimport React, {FC, ReactNode} from 'react';\r\n\r\ntype FormControlType = WrappedFieldProps & {\r\n    children: ReactNode;\r\n}\r\n\r\nconst FormControl: FC<FormControlType> = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n    );\r\n};\r\n\r\nexport const Input = (props: WrappedFieldProps) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n    );\r\n};\r\n\r\nexport const createField = (placeholder: string, name: string, type: string, validators: Validator[], component: ReactNode, props = {}) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} type={type} validate={validators}\r\n                   component={component} {...props}/>\r\n        </div>\r\n    );\r\n};","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype MapStateForRedirectType = {\r\n    isAuth: boolean;\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateForRedirectType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    class RedirectComponent extends React.Component<MapStateForRedirectType> {\r\n        render() {\r\n            const {isAuth, ...restProps} = this.props;\r\n\r\n            if (!isAuth) {\r\n                return <Redirect to={'/login'}/>;\r\n            }\r\n\r\n            return <Component {...restProps as T}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","export const required = (value: string) => {\r\n    return value ? undefined : 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    return value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__7Kujw\",\"error\":\"FormsControls_error__VtPjP\",\"formSummaryError\":\"FormsControls_formSummaryError__u1JdX\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","styles","photos","large","src","alt","Preloader","Post","message","likes","maxLength70","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","Posts","memo","postsElements","postsData","map","post","id","values","addPost","newPostText","PostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userID","this","match","params","authorizedUserID","getUserProfile","getStatus","React","compose","auth","isAuth","withRouter","withAuthRedirect","FormControl","input","meta","touched","error","children","hasError","restProps","Input","createField","type","validators","mapStateToPropsForRedirect","Component","RedirectComponent","to","undefined","maxLength","length","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}